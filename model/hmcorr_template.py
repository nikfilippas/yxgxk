"""
Interpolates values for the Halo Model correction,
as derived from ./hmcorr.py.
"""

import numpy as np
from scipy.interpolate import interp1d

# SEE ./hmcorr.py FOR CALCS
BF_T08 = np.array([[0.52186299, 0.32507461],
                   [0.52847102, 0.32821962],
                   [0.53474521, 0.32975323],
                   [0.54298405, 0.3318656 ],
                   [0.5529678 , 0.33442817],
                   [0.56439153, 0.33719239],
                   [0.57704322, 0.339988  ],
                   [0.5907863 , 0.34270285],
                   [0.60552842, 0.34527308],
                   [0.62122577, 0.34768503],
                   [0.63784608, 0.34992944],
                   [0.6553788 , 0.35201404],
                   [0.67382389, 0.35395481],
                   [0.69318781, 0.35576871],
                   [0.71347519, 0.35746739],
                   [0.73469711, 0.35906698]])

BF_T10 = np.array([[0.52186299, 0.32507461],
                   [0.52847102, 0.32821962],
                   [0.53474521, 0.32975323],
                   [0.54298405, 0.3318656 ],
                   [0.5529678 , 0.33442817],
                   [0.56439153, 0.33719239],
                   [0.57704322, 0.339988  ],
                   [0.5907863 , 0.34270285],
                   [0.60552842, 0.34527308],
                   [0.62122577, 0.34768503],
                   [0.63784608, 0.34992944],
                   [0.6553788 , 0.35201404],
                   [0.67382389, 0.35395481],
                   [0.69318781, 0.35576871],
                   [0.71347519, 0.35746739],
                   [0.73469711, 0.35906698]])

hm_z = np.linspace(0, 1, 16)
hm_a = 1/(1+hm_z)


def HM_gauss(mf):
    if mf == "tinker":
        k0_func = interp1d(hm_a, BF_T08[:, 0])
        s_func = interp1d(hm_a, BF_T08[:, 1])
    elif mf == "tinker10":
        k0_func = interp1d(hm_a, BF_T10[:, 0])
        s_func = interp1d(hm_a, BF_T10[:, 1])
    else:
        raise ValueError("Mass function not recognised in HM correction.")
    return k0_func, s_func
